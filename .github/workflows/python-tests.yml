name: Python Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-22.04  # Pin OS version for reproducibility
    permissions:
      contents: read  # Only needs to read repository contents
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']  # Unified with conda workflow
    
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744  # v3.6.0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1  # v4.7.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Enable pip caching for faster builds
        cache-dependency-path: |
          requirements_ci.txt
          requirements-dev.txt
    
    - name: Cache pip packages
      uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84  # v3.3.2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements_ci.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip==23.1.2
        pip install -r requirements_ci.txt
    
    - name: Log installed packages for reproducibility
      run: |
        echo "=== Installed Package Versions ==="
        pip freeze
        echo "==================================="
    
    - name: Run basic tests
      run: |
        python tests/test_basic_functionality.py
    
    - name: Run CI-safe tests
      run: |
        python tests/test_ci_safe.py
    
    - name: Verify README LaTeX syntax
      run: |
        python tests/test_readme_latex.py
    
    - name: Run pytest on basic tests
      run: |
        pytest tests/test_finiteness_basic.py -v
        pytest tests/test_basic_functionality.py -v
        pytest tests/test_readme_latex.py -v
    
    - name: Test imports
      run: |
        python -c "
        try:
            import src
            print('‚úÖ Importaci√≥n b√°sica: OK')
        except ImportError as e:
            if 'sage' in str(e).lower():
                print('‚ö†Ô∏è  SageMath no disponible (esperado en CI)')
            else:
                raise
        "
    
    - name: Verify file structure
      run: |
        echo "Verificando estructura de archivos..."
        [ -f "src/spectral_finiteness.py" ] && echo "‚úÖ spectral_finiteness.py encontrado" || echo "‚ùå spectral_finiteness.py no encontrado"
        [ -f "README.md" ] && echo "‚úÖ README.md encontrado" || echo "‚ùå README.md no encontrado"
        [ -d "tests" ] && echo "‚úÖ Directorio tests encontrado" || echo "‚ùå Directorio tests no encontrado"
    
    - name: Run mathematical tests (si Sage est√° disponible)
      run: |
        # Solo ejecutar tests matem√°ticos si Sage est√° disponible
        if command -v sage &> /dev/null; then
          echo "SageMath disponible, ejecutando tests matem√°ticos"
          sage -python tests/test_finiteness.py
        else
          echo "SageMath no disponible, omitiendo tests matem√°ticos"
        fi

  documentation:
    runs-on: ubuntu-22.04  # Pin OS version for reproducibility
    permissions:
      contents: read  # Only needs to read repository contents
    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744  # v3.6.0
    
    - name: Check documentation
      run: |
        [ -f "README.md" ] && echo "‚úÖ README existe" || exit 1
        [ -f "CONTRIBUTING.md" ] || echo "‚ö†Ô∏è  CONTRIBUTING.md no encontrado"
        echo "üìö Documentaci√≥n b√°sica: OK"
